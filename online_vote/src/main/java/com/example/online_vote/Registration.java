package com.example.online_vote;

import java.util.Date;

import jakarta.persistence.*;
import jakarta.validation.constraints.*;

/**
 * The Registration entity represents a voter's registration record in the system.
 */
@Entity
@Table(name = "registration") // Maps this class to the 'registration' table in the database
public class Registration {

    // Primary key (matricule), auto-generated by the database
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long matricule;

    // First name: required, between 3 and 50 characters
    @NotBlank(message = "First name is required")
    @Size(min = 3, max = 50, message = "First name must be between 3 and 50 characters")
    @Column(name = "first_name", nullable = false)
    private String firstName;

    // Surname: required, between 3 and 50 characters
    @NotBlank(message = "Surname is required")
    @Size(min = 3, max = 50, message = "Surname must be between 3 and 50 characters")
    @Column(name = "surname", nullable = false)
    private String surName;

    // Birth date: required, must be a past date
    @NotNull(message = "Birth date is required")
    @Past(message = "Birth date must be in the past")
    @Column(name = "birth_date", nullable = false)
    private Date birthDate;

    // Gender: required (e.g., Male/Female/Other)
    @NotBlank(message = "Gender is required")
    @Column(name = "gender", nullable = false)
    private String gender;

    // Place of birth: required, 3–20 characters
    @NotBlank(message = "Place of birth is required")
    @Size(min = 3, max = 20, message = "Place of birth must be between 3 and 20 characters")
    @Column(name = "place_of_birth", nullable = false)
    private String placeOfBirth;

    // Email: required, valid format, max 50 characters, must be unique
    @NotBlank(message = "Email is required")
    @Email(message = "Email should be valid")
    @Size(max = 50, message = "Email must be at most 50 characters")
    @Column(name = "email", nullable = false, unique = true)
    private String email;

    // Phone number: required, 9 digits starting with 6-9, must be unique
    @NotBlank(message = "Phone number is required")
    @Pattern(regexp = "^[6-9][0-9]{8}$", message = "Phone number must be 9 digits starting with 6,7,8 or 9")
    @Column(name = "phone_number", nullable = false, unique = true)
    private String phoneNumber;

    // Region of birth: required, 3–20 characters
    @NotBlank(message = "Region of birth is required")
    @Size(min = 3, max = 20, message = "Region must be between 3 and 20 characters")
    @Column(name = "region_of_birth", nullable = false)
    private String regionNais;

    // Department of birth: required, 3–20 characters
    @NotBlank(message = "Department of birth is required")
    @Size(min = 3, max = 20, message = "Department must be between 3 and 20 characters")
    @Column(name = "department_of_birth", nullable = false)
    private String departNais;

    // Arrondissement of birth: required, 3–20 characters
    @NotBlank(message = "Arrondissement of birth is required")
    @Size(min = 3, max = 20, message = "Arrondissement must be between 3 and 20 characters")
    @Column(name = "arrondissement_of_birth", nullable = false)
    private String arrondNais;

    // Political party: required
    @NotBlank(message = "Political party is required")
    @Column(name = "political_party", nullable = false)
    private String partiPolitique;

    /**
     * Full constructor to initialize all fields except matricule (auto-generated).
     */
    public Registration(String surName, String firstName, Date birthDate, String gender,
                        String placeOfBirth, String email, String phoneNumber,
                        String regionNais, String departNais, String arrondNais, String partiPolitique) {
        this.surName = surName;
        this.firstName = firstName;
        this.birthDate = birthDate;
        this.gender = gender;
        this.placeOfBirth = placeOfBirth;
        this.email = email;
        this.phoneNumber = phoneNumber;
        this.regionNais = regionNais;
        this.departNais = departNais;
        this.arrondNais = arrondNais;
        this.partiPolitique = partiPolitique;
    }

    /**
     * Default constructor required by JPA.
     */
    public Registration() {
    }

    // --- Getters and Setters ---

    public Long getMatricule() {
        return matricule;
    }

    public void setMatricule(Long matricule) {
        this.matricule = matricule;
    }

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getSurName() {
        return surName;
    }

    public void setSurName(String surName) {
        this.surName = surName;
    }

    public Date getBirthDate() {
        return birthDate;
    }

    public void setBirthDate(Date birthDate) {
        this.birthDate = birthDate;
    }

    public String getPlaceOfBirth() {
        return placeOfBirth;
    }

    public void setPlaceOfBirth(String placeOfBirth) {
        this.placeOfBirth = placeOfBirth;
    }

    public String getPhoneNumber() {
        return phoneNumber;
    }

    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    public String getGender() {
        return gender;
    }

    public void setGender(String gender) {
        this.gender = gender;
    }

    public String getRegionNais() {
        return regionNais;
    }

    public void setRegionNais(String regionNais) {
        this.regionNais = regionNais;
    }

    public String getDepartNais() {
        return departNais;
    }

    public void setDepartNais(String departNais) {
        this.departNais = departNais;
    }

    public String getArrondNais() {
        return arrondNais;
    }

    public void setArrondNais(String arrondNais) {
        this.arrondNais = arrondNais;
    }

    public String getPartiPolitique() {
        return partiPolitique;
    }

    public void setPartiPolitique(String partiPolitique) {
        this.partiPolitique = partiPolitique;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }
}
